[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "chimera-ai"
version = "3.0.0"
description = "Pure OpenGL Deep Learning - Transformers Without PyTorch"
authors = [
    {name = "Francisco Angulo de Lafuente", email = "francisco.angulo@example.com"},
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = [
    "deep-learning",
    "neural-networks",
    "transformers",
    "opengl",
    "gpu-computing",
    "machine-learning",
]
dependencies = [
    "moderngl>=1.0.0",
    "numpy>=1.21.0",
    "pillow>=9.0.0",
]

[project.optional-dependencies]
conversion = [
    "torch>=1.12.0",
    "transformers>=4.21.0",
]
dev = [
    "pytest>=7.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "sphinx>=5.0.0",
]
all = [
    "chimera-ai[conversion,dev]",
]

[project.scripts]
chimera-demo = "chimera_v3.demo_pure:main"
chimera-chat = "chimera_v3.chimera_holographic_chat:main"
chimera-setup = "chimera_v3.setup_holographic_system:main"

[project.urls]
Homepage = "https://github.com/chimera-ai/chimera"
Documentation = "https://docs.chimera.ai"
Repository = "https://github.com/chimera-ai/chimera"
Issues = "https://github.com/chimera-ai/chimera/issues"
Changelog = "https://github.com/chimera-ai/chimera/blob/main/CHANGELOG.md"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
include = ["chimera*", "chimera_v3*"]

[tool.setuptools.package-data]
chimera_v3 = ["shaders/*.glsl", "configs/*.json", "data/*.json"]

[tool.black]
line-length = 100
target-version = ['py38']

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
